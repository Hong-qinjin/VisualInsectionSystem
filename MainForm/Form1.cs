using IMVSCircleFindModuCs; using System; using System.Collections.Generic; using System.ComponentModel; using System.Data; using System.Drawing; using System.Globalization; using System.IO; using System.Linq; using System.Resources; using System.Text; using System.Threading.Tasks; using System.Windows.Forms; using VM.Core; using VM.PlatformSDKCS;  namespace VisualInsectionSystem {     public partial class Form1 : Form     {              /// <summary>         /// 设置form1为主窗口         /// </summary>         public static Form1 form1 = null;         /// <summary>         /// 子窗口集合         /// </summary>         public static List<Form> subForms = new List<Form>();          public Form1()         {             InitializeComponent();             //设置form1为主窗口             form1 = this;             //初始化子窗口集合             //subForms.Add(new CameraForm());             //subForms.Add(new CommunicationForm());             subForms.Add(new DebugForm());             //subForms.Add(new AlarmForm());             //subForms.Add(new LogForm());             //subForms.Add(new UserForm());             //subForms.Add(new HelpForm());             //初始化菜单栏             //InitMenuStrip();             ////初始化工具栏             //InitToolBar();             ////初始化状态栏             //InitStatusBar();             ////初始化窗体             //InitForm();         }         private void menuStrip1_ItemClicked(object sender, ToolStripItemClickedEventArgs e)         {          }         private void 文件ToolStripMenuItem_Click(object sender, EventArgs e)         {          }         private void 相机ToolStripMenuItem_Click(object sender, EventArgs e)         {          }         private void 通讯ToolStripMenuItem_Click(object sender, EventArgs e)         {          }         private void 调试ToolStripMenuItem_Click(object sender, EventArgs e)         {                      }         private void 报警ToolStripMenuItem_Click(object sender, EventArgs e)         {          }         private void 日志ToolStripMenuItem_Click(object sender, EventArgs e)         {          }         private void 用户ToolStripMenuItem_Click(object sender, EventArgs e)         {          }         private void 帮助ToolStripMenuItem_Click(object sender, EventArgs e)         {          }         private void groupBox1_Enter(object sender, EventArgs e)         {          }         private void groupBox2_Enter(object sender, EventArgs e)         {          }         private void groupBox3_Enter(object sender, EventArgs e)         {          }         private void 关于ToolStripMenuItem_Click(object sender, EventArgs e)         {          }          private void 打开方案ToolStripMenuItem_Click(object sender, EventArgs e)         {                                         }         private void 打开调试ToolStripMenuItem_Click(object sender, EventArgs e)         {              try             {                 //打开调试页面                 DebugForm debugForm = new DebugForm();                 debugForm.Show();             }             catch (Exception ex)             {                 VM.PlatformSDKCS.VmException vmEx = VM.Core.VmSolution.GetVmException(ex);                 if (null != vmEx)                 {                     string strMsg = "InitControl failed. Error Code: " + Convert.ToString(vmEx.errorCode, 16);                     MessageBox.Show(strMsg);                 }                            }         }          private void Form1_Load_1(object sender, EventArgs e)         {             //UI          }         private void Form1_Closing(object sender, FormClosingEventArgs e)         {             if (MessageBox.Show(@"确定退出？", @"提示", MessageBoxButtons.YesNo, MessageBoxIcon.Asterisk) != DialogResult.Yes)             {                 e.Cancel = true;                  return;             }             //释放资源             VmSolution.Instance?.Dispose();          }         /// <summary>         /// 选择并加载方案按钮         /// </summary>         /// <param name="sender"></param>         /// <param name="e"></param>         private void button1_Click(object sender, EventArgs e)         {             string message;             try             {                 OpenFileDialog openFileDialog = new OpenFileDialog
                {
                    Filter = @"VM Sol File(*.sol)|*.sol"
                };                 if (openFileDialog.ShowDialog() == DialogResult.OK)                 {                                         string strFilePath = openFileDialog.FileName;                                         VmSolution.Load(strFilePath);                                      }                 listBox1.Items.Add(openFileDialog.FileName + "选择加载方案成功");                 listBox1.TopIndex = listBox1.Items.Count - 1;             }             catch (VmException ex)               {                 message = "Load Sol Failed." + ex.errorCode;                 listBox1.Items.Add(message);                 listBox1.TopIndex = listBox1.Items.Count - 1;             }                         }                 private void button2_Click(object sender, EventArgs e)         {          }         /// <summary>         /// 这里不停机的执行，演示时执行一次即可         /// </summary>               private void button3_Click(object sender, EventArgs e)         {                         VmSolution.Instance.SyncRun();  //执行一次             listBox1.Items.Add("单次执行成功");             listBox1.TopIndex = listBox1.Items.Count - 1;              /// <summary>             /// 将执行结果显示于groupBox3中的vmRenderControlPic控件中             /// </summary>                                  VMControls.Winform.Release.VmRenderControl vmRenderControlPic = new VMControls.Winform.Release.VmRenderControl();  //add  显示渲染结果和获取数据结果             VmProcedure vmProcedure = (VmProcedure)VmSolution.Instance[""];   //define and init流程对象                                     vmRenderControlPic.ModuleSource = vmProcedure;  //设置模块源             vmRenderControlPic.Show();  //显示渲染控件              //Task.Run(() =>             //{             //    vmProcedure.Run();             //});             //VmProcedure vmProcedure = (VmProcedure)VmSolution.Instance["选中的方案"];             //Task.Run(() =>             //{             //    vmProcedure.ContinuousRunEnable = false;             //});              ////listBox1.Items.Add("连续执行中");             ////listBox1.TopIndex = listBox1.Items.Count - 1;         }         /// <summary>         /// 停止按钮         /// </summary>         private void button4_Click(object sender, EventArgs e)         {             VmProcedure vmProcedure = (VmProcedure)VmSolution.Instance["选中的方案"];             Task.Run(() =>             {                 vmProcedure.ContinuousRunEnable = false;             });             VmSolution.Instance.Dispose();  //停止执行         }

        private void 保存ToolStripMenuItem_Click(object sender, EventArgs e)
        {

        }
    } } 